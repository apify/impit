# This file is autogenerated by maturin v1.8.2
# To update, run
#
#    maturin generate-ci github --pytest
#
name: "[impit-python] Test & Build"

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    paths:
        - 'impit-python/**'
        - 'impit/**'
        - 'Cargo.*'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
        #   - runner: ubuntu-22.04
        #     target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Calculate openssl-vendored
        shell: bash
        id: is-openssl-vendored
        run: |
          if [[ "${{ startsWith(matrix.platform.target, 'x86') }}" == "true" ]]; then
            echo "enabled=" >> $GITHUB_OUTPUT
          else
            echo "enabled=--features openssl-vendored" >> $GITHUB_OUTPUT
          fi

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: impit-python
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto
          before-script-linux: |
            case "${{ matrix.platform.target }}" in
              "aarch64" | "armv7" | "s390x" | "ppc64le")
                # NOTE: pypa/manylinux docker images are Debian based
                sudo apt-get update
                sudo apt-get install -y pkg-config libssl-dev perl
                ;;
              "x86" | "x86_64")
                # NOTE: rust-cross/manylinux docker images are CentOS based
                yum update -y
                yum install -y openssl openssl-devel perl perl-IPC-Cmd
                ;;
            esac

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: impit-python/dist
      - name: pytest
        if: ${{ startsWith(matrix.platform.target, 'x86_64') }}
        shell: bash
        working-directory: impit-python
        env:
            APIFY_HTTPBIN_TOKEN: ${{ secrets.APIFY_HTTPBIN_TOKEN }}
        run: |
          set -e
          python3 -m venv .venv
          source .venv/bin/activate
          pip install impit --no-index --find-links dist --force-reinstall
          pip install pytest pytest-asyncio
          python -m pytest
      - name: pytest
        if: ${{ !startsWith(matrix.platform.target, 'x86') && matrix.platform.target != 'ppc64' }}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.platform.target }}
          distro: ubuntu22.04
          env: |
            APIFY_HTTPBIN_TOKEN: ${{ secrets.APIFY_HTTPBIN_TOKEN }}
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip pytest pytest-asyncio
          run: |
            set -e
            pip3 install impit --no-index --find-links impit-python/dist --force-reinstall
            pytest

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: impit-python
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: musllinux_1_2
          before-script-linux: |
            sudo apt-get update
            sudo apt-get install -y pkg-config libssl-dev perl
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: impit-python/dist
      - name: pytest
        if: ${{ startsWith(matrix.platform.target, 'x86_64') }}
        uses: addnab/docker-run-action@v3
        with:
          image: alpine:latest
          options: -v ${{ github.workspace }}:/io -w /io -e APIFY_HTTPBIN_TOKEN=${{ secrets.APIFY_HTTPBIN_TOKEN }}
          run: |
            set -e
            apk add py3-pip py3-virtualenv
            python3 -m virtualenv .venv
            source .venv/bin/activate
            pip install impit --no-index --find-links impit-python/dist/ --force-reinstall
            pip install pytest pytest-asyncio
            pytest
      - name: pytest
        if: ${{ !startsWith(matrix.platform.target, 'x86') }}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.platform.target }}
          distro: alpine_latest
          githubToken: ${{ github.token }}
          env: |
            APIFY_HTTPBIN_TOKEN: ${{ secrets.APIFY_HTTPBIN_TOKEN }}
          install: |
            apk add py3-virtualenv
          run: |
            set -e
            python3 -m virtualenv .venv
            source .venv/bin/activate
            pip install pytest pytest-asyncio
            pip install impit --no-index --find-links impit-python/dist/ --force-reinstall
            pytest

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: impit-python
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: impit-python/dist
      - name: pytest
        if: ${{ !startsWith(matrix.platform.target, 'aarch64') }}
        shell: bash
        working-directory: impit-python
        env:
            APIFY_HTTPBIN_TOKEN: ${{ secrets.APIFY_HTTPBIN_TOKEN }}
        run: |
          set -e
          python3 -m venv .venv
          source .venv/Scripts/activate
          pip install impit --no-index --find-links dist --force-reinstall
          pip install pytest pytest-asyncio
          python -m pytest

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: impit-python
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: impit-python/dist
      - name: pytest
        working-directory: impit-python
        env:
            APIFY_HTTPBIN_TOKEN: ${{ secrets.APIFY_HTTPBIN_TOKEN }}
        run: |
          set -e
          python3 -m venv .venv
          source .venv/bin/activate
          pip install impit --no-index --find-links dist --force-reinstall
          pip install pytest pytest-asyncio
          python -m pytest

